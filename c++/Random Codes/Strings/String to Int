Problem:    Convert str to int while removing all initial zeroes and keeping the initial sign of str and breaking string if any other character comes rather than numbers ...
            Condition :integer should b ein between (-2^31 to 2^31-1) otherwise round off to these maxima or minima..........................................................
CODE:


#include <bits/stdc++.h>
using namespace std;

int stoi(int x){
    int a=(x-48);
    return a;   
}

int main() {
	string s;
	cin>>s;
	vector<int>v;
	int a=s.size();
	int count=0;
	int d,e;
	if(s[0]==45){
	    e=-1;
	    for(int i=1;i<a;i++){
	        if(s[i]>57||s[i]<48){
	            break;
	        }
	        else if(s[i]==48&&count==0){
	            continue;
	        }
	        else{
	            v.push_back(stoi(s[i]));
	            count++;
	        }
	    }
	}
	else{
	    e=1;
	    for(int i=0;i<a;i++){
	        if(s[i]>57||s[i]<48){
	            break;
	        }
	        else if(s[i]==48&&count==0){
	            continue;
	        }
	        else{
	            v.push_back(stoi(s[i]));
	            count++;
	        }
	    }
	    
	}
	int c=v.size();
	for(int i=0;i<c;i++){
	    d=d+pow(10,i)*v[c-i-1];
	}
	int f=d*e;
	if(f>=-1*pow(2,31)&&f<=(pow(2,31)-1)){
	    cout<<f;
	}
	else if(f<-1*pow(2,31)){
	    cout<<-1*pow(2,31);
	}
    else if(f>(pow(2,31)-1)){
        cout<<(pow(2,31)-1);
    }	
}
